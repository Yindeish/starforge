// app/battle/page.tsx
'use client'

import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Lock } from 'lucide-react'
import { useI18n } from '@/components/i18n-provider'

export default function BattlePage() {
  const { t } = useI18n()

  return (
    <div className="container mx-auto px-4 py-12">
      <div className="max-w-3xl mx-auto">
        <Card className="relative overflow-hidden bg-gradient-to-br from-slate-900/60 to-purple-900/60 border-purple-500/30">
          <div className="absolute inset-0 bg-gradient-to-br from-purple-500/10 to-pink-500/10" />
          <CardHeader className="relative z-10 text-center">
            <div className="mx-auto mb-4 w-14 h-14 rounded-full bg-purple-600/20 flex items-center justify-center">
              <Lock className="w-7 h-7 text-purple-300" />
            </div>
            <CardTitle className="text-3xl font-bold bg-gradient-to-r from-purple-300 to-pink-300 bg-clip-text text-transparent">
              {t('battle.unavailable.title')}
            </CardTitle>
          </CardHeader>
          <CardContent className="relative z-10 text-center space-y-6">
            <p className="text-gray-300">
              {t('battle.unavailable.desc')}
            </p>
            <Button
              disabled
              className="bg-gradient-to-r from-gray-700 to-gray-600 cursor-not-allowed"
              aria-disabled="true"
            >
              {t('battle.buttons.soon')}
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}

// lib/i18n.ts
const dictionaries = {
  en: {
    battle: {
      unavailable: {
        title: 'Battle System — Temporarily Unavailable',
        desc: 'We are polishing combat, matchmaking, rewards, and animations. It will open immediately once ready. Thanks for your patience.',
      },
      buttons: {
        soon: 'Coming Soon',
      },
    },
    staking: {
      infoTitle: 'Staking Information',
      pending: {
        claim: 'Claim {{amount}} SAF',
      },
      unstake: 'Unstake',
    },
    common: {
      day: 'Day',
    },
  },
  zh: {
    battle: {
      unavailable: {
        title: '战斗系统 — 暂未开放',
        desc: '我们正在完善战斗、匹配、奖励与动画。准备完成后立即开放，感谢耐心等待。',
      },
      buttons: {
        soon: '敬请期待',
      },
    },
    staking: {
      infoTitle: '质押信息',
      pending: {
        claim: '领取 {{amount}} SAF',
      },
      unstake: '取消质押',
    },
    common: {
      day: '天',
    },
  },
}

export default dictionaries

// app/staking/page.tsx
'use client'

import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { X } from 'lucide-react'
import { useI18n } from '@/components/i18n-provider'
import { toast } from 'react-toastify'

export default function StakingPage() {
  const { t } = useI18n()
  const totalPendingRewards = 1000
  const result = { earnings: 500 }
  const hero = { dailyReward: 10 }
  const currentEarnings = { 1: 20 }
  const dailyReward = 5

  return (
    <div className="container mx-auto px-4 py-12">
      <div className="max-w-3xl mx-auto">
        <Card className="mt-8 bg-gradient-to-r from-blue-900/20 to-purple-900/20 border-blue-500/30">
          <CardHeader>
            <CardTitle className="text-blue-300">{t('staking.infoTitle')}</CardTitle>
          </CardHeader>
          <CardContent>
            {/* Staking content here */}
            <div className="mt-4">
              <p>{t('staking.pending.claim', { amount: totalPendingRewards.toLocaleString() })}</p>
              <Button onClick={() => toast({ title: t('staking.unstake'), description: `${result.earnings} SAF` })}>
                {t('staking.buttons.claimAll')}
              </Button>
            </div>
            <div className="mt-4">
              <p>{hero.dailyReward.toLocaleString()} SAF/{t('common.day')}</p>
              <p>{currentEarnings[hero.id]?.toLocaleString() || 0} SAF</p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}

// components/navigation.tsx
import { X } from 'lucide-react'
import { Button } from '@/components/ui/button'

export default function Navigation() {
  return (
    <nav className="bg-gray-800 p-4">
      <Button variant="ghost">
        <X className="w-4 h-4" />
      </Button>
      <span className="ml-4 text-gray-300">SAF</span>
    </nav>
  )
}

// app/wallet/page.tsx
'use client'

import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { useI18n } from '@/components/i18n-provider'

export default function WalletPage() {
  const { t } = useI18n()
  const tx = { amountSTG: 100 }
  const balance = 500

  return (
    <div className="container mx-auto px-4 py-12">
      <div className="max-w-3xl mx-auto">
        <Card className="mt-8 bg-gradient-to-r from-blue-900/20 to-purple-900/20 border-blue-500/30">
          <CardHeader>
            <CardTitle className="text-blue-300">{t('wallet.title')}</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="mt-4">
              <p>{t('wallet.recentTransaction', { amount: tx.amountSTG.toFixed(2) })} SAF</p>
            </div>
            <div className="mt-4">
              <p>{t('wallet.balance', { amount: balance })} SAF</p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}

// app/mint/page.tsx
'use client'

import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { useI18n } from '@/components/i18n-provider'
import { toast } from 'react-toastify'

export default function MintPage() {
  const { t } = useI18n()
  const mintCostSTG = 100
  const totalCost = 500

  return (
    <div className="container mx-auto px-4 py-12">
      <div className="max-w-3xl mx-auto">
        <Card className="mt-8 bg-gradient-to-r from-blue-900/20 to-purple-900/20 border-blue-500/30">
          <CardHeader>
            <CardTitle className="text-blue-300">{t('mint.title')}</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="mt-4">
              {mintCostSTG.toFixed(2)} SAF
            </div>
            <div className="mt-4">
              {totalCost.toFixed(2)} SAF
            </div>
            <Button onClick={() => toast({ title: 'Insufficient SAF', variant: 'destructive' })}>
              {t('mint.buttons.mint')}
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
